Hello,

This file is meant to contain information about how this site works and what features could be added in the future.

HOW THE SITE WORKS:
Firstly, the includes folder contains php that most of the pages use.
The footer, header, and navbar are present on almost every page.
Since the header is on every page and is always the first thing displayed, it is the file that ensures the user is logged in before letting the page load.
If the user is not logged in, they are redirected to login.php, which contains the login form.
The login form uses the authenticateUser() function in functions/database_functions.php to determine whether the user can log in or not.
Once logged in, the user will land on the home page and have access to the full site.
They can view and modify items in the database using 8 of the links on the navbar from Blue Jays to Meetings.
These 8 pages all use the same backend code for everything, which is explained in functions/generalized_functions.php.
The Data Export page (import.php) can be used to export data from any table to a CSV file.
The Data Export page also contains a complicated import feature that uses a combination of PHP and JS to create a very configurable import form.
Good luck trying to ever update the import feature, because it is a pain to work on and the code is like somewhat of a mess.
The about page (about.php) shows all contributors that worked on this project and has links to an individual page for each person that is located in the contributors folder.
The profile page (profile.php) is important for users as it allows them to change their password.
The profile page also allows accounts with a permission level of 10 or higher to manage other accounts using manage_accounts.php and the corresponding functions/accounts_functions.php.
The logout button is the last item on the navbar and is self-explanitory. 
All pages also use js/deletePostData.js to prevent a refresh from accidentally submitting a form twice. This may not be a good thing, but it works for now.

POSSIBLE FUTURE FEATURES IN ORDER OF IMPORTANCE:
- Address any complaints the client has after using the site for a while. As of the time of writing, the site has not been put to use yet.
- Ensure the website is configured to prevent not logged in users from viewing data in the export and upload directories. These directories may not exist until you import or export to CSV. These directories will likely contain sensitive data.
- Add Cross-Site Request Forgery (CSRF) prevention measures by including unique, one-time values every time a form is submitted
- Make the login more secure by not sending the password from the user to the site, then from the site to the database. Since HTTPS is being used, the passwords should be mostly secure, but HTTPS is not 100% secure. Hash the password on the client, and again on the site, each with unique salt values to prevent reverse hashing.
- Create a custom search form for all 8 database-related pages that would allow the client to search by fields other than just the diplayColumns like name, title, etc
- Complete the barely-started reports page: more info can be found in the comments in reports.php
- Fix up the CSS more so pages like the login screen look decent on more devices, possibly using w3schools CSS. Noone was that good at CSS so all of it is kinda janky. The main problem is what the site looks like on a phone.
- Make the password change function more secure by requiring an email with a code (If the client wants this)
- Add a calendar for meetings and coaching to make it easier to visualize what events occured/ will occur when.
- Add foreign key support to the import. Ex: You are importing a CSV file with internship and student data and you want the user to choose to link each intership to the new student record that is being created.
- Make landing page more dynamic by pulling images directly from the EMCS Instagram. This may be difficult and is highly unnecessary.


FINAL THOUGHTS:
This project is a big project that may be difficult to work on.
I apologize for the unreadable mess of code that I have created, but it works so all I can say is good luck.
Make sure to set reasonable goals according to your skill level and do not sacrifice all of your time for a project you are not getting paid for.
I doubt you will get through all the tasks you have, since my group certainly did not.
If you do manage to get through all the tasks, I applaud you.
Keep security at the forefront of your mind and write all code as if someone is going to try to hack in using all means possible.
Have a fun time coding, and I wish you all the best of luck.

    - Adam Omundsen 12-1-2022